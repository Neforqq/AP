public class doska {
    public static void main(String[] args) {
        int N = 8;
        char[][] board = new char[N][N];


        for (int i = 0; i < N; i++)
            for (int j = 0; j < N; j++)
                board[i][j] = '.';
        for (int i = 0; i < N; i++) {
            board[i][i] = 'T';
        }
        printBoard(board);
    }
    private static void printBoard(char[][] board) {
        for (char[] row : board) {
            for (char cell : row) {
                System.out.print(cell + " ");
            }
            System.out.println();
        }
    }
}
//
public class doska {
    public static void main(String[] args) {
        int N = 8;
        char[][] board = new char[N][N];
        for (int i = 0; i < N; i++)
            for (int j = 0; j < N; j++)
                board[i][j] = '.';
        int placed = 0;
        for (int row = 0; row < N; row++) {
            for (int col = 0; col < N; col++) {
                if (canPlace(board, row, col, N)) {
                    board[row][col] = 'B';
                    placed++;
                }
                if (placed == N) break;
            }
            if (placed == N) break;
        }
        printBoard(board);
        System.out.println("Всього розміщено: " + placed + " слонів.");
    }
    public static boolean canPlace(char[][] board, int row, int col, int N) {
        for (int i = 1; i < N; i++) {
            if (row - i >= 0 && col - i >= 0 && board[row - i][col - i] == 'B') return false;
            if (row - i >= 0 && col + i < N && board[row - i][col + i] == 'B') return false;
            if (row + i < N && col - i >= 0 && board[row + i][col - i] == 'B') return false;
            if (row + i < N && col + i < N && board[row + i][col + i] == 'B') return false;
        }
        return true;
    }
    public static void printBoard(char[][] board) {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board.length; j++)
                System.out.print(board[i][j] + " ");
            System.out.println();
        }
    }
}


